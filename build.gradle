plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'nu.studer.jooq' version '4.1'
	id "org.flywaydb.flyway" version "6.3.3"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'nu.studer.jooq'
apply plugin: "org.flywaydb.flyway"

group = 'bot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	jooqRuntime 'postgresql:postgresql:9.1-901.jdbc4'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}

flyway {
	url = 'jdbc:postgresql://localhost:5432/db_bot'
	user = 'postgres'
	password = '12345'
	locations = ["filesystem:$project.projectDir/src/main/resources/db/migration"]
}
jooq {
	csmart(sourceSets.main) {
		jdbc {
			driver = 'org.postgresql.Driver'
			url = 'jdbc:postgresql://localhost:5432/db_bot'
			user = 'postgres'
			password = '12345'
		}
		generator {
			name = 'org.jooq.codegen.DefaultGenerator'
			strategy {
				name = 'org.jooq.codegen.DefaultGeneratorStrategy'
			}
			database {
				name = 'org.jooq.meta.postgres.PostgresDatabase'
				inputSchema = 'public'
			}
			generate {
				relations = true
				deprecated = false
				records = true
				immutablePojos = true
				fluentSetters = true
			}
			target {
				packageName = 'bot.elite'
				directory = 'build/generated/sources/jooq/main'
			}
		}
	}
}